const { downloadData } = require('../common/utils')
const { WatsonStrategy } = require('../common/WatsonStrategy')
const coinbase = require('../services/coinbase')

// get historic data till now
const baseId = "BTC"
const quoteId = "EUR"
const productId = `${baseId}-${quoteId}`
const timeFrame = 86400
const start = new Date()
const end = new Date()
const buffer = 26
const strategy = new WatsonStrategy(timeFrame, buffer, productId)

main = async () => {

    const data = await downloadData(start, end, timeFrame, 2 * buffer)
    const base = await coinbase.getWallet(baseId)
    const quote = await coinbase.getWallet(quoteId)

    data.forEach(candle => {
        strategy.next(candle, base.available, quote.available)
    })

    try {
        // Cancel all pending orders
        const cancel = await coinbase.cancelAll()
        console.log("cancel: ", cancel)
        // Place buy/sell order
        const advice = await coinbase.placeOrder(strategy.getAdvice())
        console.log("advice: ",advice)
        // Place stop-loss when buy order is placed
        if (advice.side === "buy") {
            const stop = await coinbase.placeOrder(strategy.getStopAdvice())
            console.log("stop: ",stop)
        }
    } catch (e) {
        console.log(e.stack)
        await coinbase.cancelAll()
    }

}

main()
